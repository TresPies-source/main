
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check ownership
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    // Task Jar
    match /tasks/{taskId} {
      allow read, write: if isOwner(resource.data.userId);
    }
    
    // Win Jar
    match /wins/{winId} {
      allow read, write: if isOwner(resource.data.userId);
    }

    // Focus Timer Sessions
    match /focusSessions/{sessionId} {
      allow read, write: if isOwner(resource.data.userId);
    }

    // Gratitude Jar
    match /gratitude/{gratitudeId} {
       allow read, write: if isOwner(resource.data.userId);
    }

    // Intention Setter
    match /intentions/{intentionId} {
       allow read, write: if isOwner(resource.data.userId);
    }
    
    // Custom Affirmations (Motivation Jar)
    match /affirmations/{affirmationId} {
       allow read, write: if isOwner(resource.data.userId);
    }

    // User Mappings for Slack/Discord integrations
    match /userMappings/{mappingId} {
      // Only allow users to manage their own mappings.
      // Creation might need to be handled by a secure Cloud Function if it involves secrets.
      allow read, write: if isOwner(resource.data.zenJarUserId);
    }

    // Deny all other reads/writes by default
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
